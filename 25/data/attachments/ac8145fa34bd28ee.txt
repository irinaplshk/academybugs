# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Crash >> The selected number of results is not desplayed 
- Location: /home/runner/work/academybugs/academybugs/tests/test.spec.js:29:7

# Error details

```
Error: page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL
Call log:
  - navigating to "", waiting until "load"

    at /home/runner/work/academybugs/academybugs/src/pages/base.page.js:12:29
    at MainPage.open (/home/runner/work/academybugs/academybugs/src/pages/base.page.js:11:20)
    at /home/runner/work/academybugs/academybugs/tests/test.spec.js:34:27
```

# Test source

```ts
   1 | import { test } from '@playwright/test';
   2 |
   3 | export class BasePage {
   4 |  
   5 |     constructor(page) {
   6 |         this.page = page;
   7 |  
   8 |     }
   9 |  
  10 |     async open() {
  11 |         await test.step("Open site", async () => {
> 12 |             await this.page.goto('');
     |                             ^ Error: page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL
  13 |         });
  14 |     }
  15 |  
  16 | }
```

# Local changes

```diff
diff --git a/src/pages/findBags.page.js b/src/pages/findBags.page.js
index 2a33797..1971925 100644
--- a/src/pages/findBags.page.js
+++ b/src/pages/findBags.page.js
@@ -9,6 +9,7 @@ export class FindBagsPage  {
     this.checkOutButton   =   page.getByRole('link', { name: 'CHECKOUT NOW' });
     this.productClick     = page.locator('#ec_product_image_effect_4481370').getByRole('link');
     this.mistakeMessage   = page.getByRole('heading', { name: 'What did you find out?' });
+    
   }
   async checkImage() {
     await this.imageClick.click();
diff --git a/tests/test.spec.js b/tests/test.spec.js
index f3f7107..a0b03a4 100644
--- a/tests/test.spec.js
+++ b/tests/test.spec.js
@@ -16,7 +16,7 @@ test.describe('Visual', () => {
     await webApp.mainPage.findBags();
     await webApp.findBagsPage.checkImage();
 
-    await expect(webApp.findBagsPage.mistakeMessage).toBeVisible();
+    await expect(webApp.findBagsPage.mistakeMessage).toBeVisible({timeout:25000});
   })
 
 
@@ -36,7 +36,8 @@ test.describe('Crash', () => {
     await webApp.mainPage.findBags();
     await webApp.findBagsPage.getThingsOnPage();
 
-    await expect(page.getByRole('heading', { name: 'You found a crash bug,' })).toBeVisible();
+    await expect(page.getByRole('heading', { name: 'You found a crash bug,' })).toBeVisible({timeout:25000});
+
   })
   test('The comment is not posted under the product', async ({ page }) => {
     webApp = new WebApp(page);
@@ -47,7 +48,7 @@ test.describe('Crash', () => {
     await webApp.productPage.addComment('test');
 
     
-    await expect( webApp.productPage.mistakeMessage).toBeVisible();
+    await expect( webApp.productPage.mistakeMessage).toBeVisible({timeout:25000});
 
   })
 
@@ -92,7 +93,7 @@ test.describe('Functional', () => {
     await webApp.findBagsPage.gotoProduct();
     await webApp.productPage.gotoxPlatform();
 
-    await expect( webApp.productPage.mistakeMessage).toBeVisible();
+    await expect( webApp.productPage.mistakeMessage).toBeVisible({timeout:25000});
     
   })
```
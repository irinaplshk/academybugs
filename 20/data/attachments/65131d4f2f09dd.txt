# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Crash >> The selected number of results is not desplayed 
- Location: /home/runner/work/academybugs/academybugs/tests/test.spec.js:29:7

# Error details

```
Error: page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL
Call log:
  - navigating to "", waiting until "load"

    at /home/runner/work/academybugs/academybugs/src/pages/base.page.js:12:29
    at MainPage.open (/home/runner/work/academybugs/academybugs/src/pages/base.page.js:11:20)
    at /home/runner/work/academybugs/academybugs/tests/test.spec.js:34:27
```

# Test source

```ts
   1 | import { test } from '@playwright/test';
   2 |
   3 | export class BasePage {
   4 |  
   5 |     constructor(page) {
   6 |         this.page = page;
   7 |  
   8 |     }
   9 |  
  10 |     async open() {
  11 |         await test.step("Open site", async () => {
> 12 |             await this.page.goto('');
     |                             ^ Error: page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL
  13 |         });
  14 |     }
  15 |  
  16 | }
```

# Local changes

```diff
diff --git a/src/pages/findBags.page.js b/src/pages/findBags.page.js
index 151d4b7..2a33797 100644
--- a/src/pages/findBags.page.js
+++ b/src/pages/findBags.page.js
@@ -8,6 +8,7 @@ export class FindBagsPage  {
     this.addToCartButton  = page.locator('#ec_add_to_cart_4');
     this.checkOutButton   =   page.getByRole('link', { name: 'CHECKOUT NOW' });
     this.productClick     = page.locator('#ec_product_image_effect_4481370').getByRole('link');
+    this.mistakeMessage   = page.getByRole('heading', { name: 'What did you find out?' });
   }
   async checkImage() {
     await this.imageClick.click();
diff --git a/src/pages/myCart.page.js b/src/pages/myCart.page.js
index bf1f921..0ea8ce5 100644
--- a/src/pages/myCart.page.js
+++ b/src/pages/myCart.page.js
@@ -4,7 +4,8 @@ export class MyCartPage {
        //this.addAmountButton = page.locator('#ec_cartitem_updating_1912632').getByRole('button', { name: '+' });
         this.addAmountButton  =  page.locator('.ec_plus_column .ec_plus');
         this.updateButton =    page.getByText('UPDATE');
-        this.updateIcon   = page.locator('.ec_cartitem_updating')
+        this.updateIcon   = page.locator('.ec_cartitem_updating');
+        this.mistakeMessage = page.locator('#popmake-4406');
 
     }
 
diff --git a/src/pages/product.page.js b/src/pages/product.page.js
index 093f9d4..a0e8baa 100644
--- a/src/pages/product.page.js
+++ b/src/pages/product.page.js
@@ -5,7 +5,9 @@ export class ProductPage {
         this.postCommentButton = page.getByRole('button', { name: 'Post Comment' });
         this.productLink       =page.getByRole('link', { name: 'DNK' });
         this.xPlatformLink =  page.getByRole('link', { name: 'X', exact: true })
-
+        this.mistakeMessage   = page.getByRole('heading', { name: 'What did you find out?' });
+        this.mistakeMessageLinkPage = page.locator('#sq-content');
+  
     }
 
     async addComment(text) {
diff --git a/tests/test.spec.js b/tests/test.spec.js
index 2721c43..f3f7107 100644
--- a/tests/test.spec.js
+++ b/tests/test.spec.js
@@ -16,7 +16,7 @@ test.describe('Visual', () => {
     await webApp.mainPage.findBags();
     await webApp.findBagsPage.checkImage();
 
-    await expect(page.getByRole('heading', { name: 'What did you find out?' })).toBeVisible();
+    await expect(webApp.findBagsPage.mistakeMessage).toBeVisible();
   })
 
 
@@ -47,7 +47,7 @@ test.describe('Crash', () => {
     await webApp.productPage.addComment('test');
 
     
-    await expect(page.getByRole('heading', { name: 'What did you find out?' })).toBeVisible({timeout: 25000});
+    await expect( webApp.productPage.mistakeMessage).toBeVisible();
 
   })
 
@@ -65,7 +65,7 @@ test.describe('Functional', () => {
     await webApp.findBagsPage.addToCart();
     await webApp.findBagsPage.gotoCart();
     await webApp.myCartPage.updateAmountToThree();
-    await expect(page.locator('#popmake-4406')).toContainText('In this bug, the product quantity cannot be increased past 2.');
+    await expect(webApp.myCartPage.mistakeMessage).toContainText('In this bug, the product quantity cannot be increased past 2.');
   })
 
   test('The manufacturer link does not show an appropriate page', async ({ page }) => {
@@ -77,7 +77,7 @@ test.describe('Functional', () => {
     await webApp.mainPage.findBags();
     await webApp.findBagsPage.gotoProduct();
     await webApp.productPage.gotoProductLink();
-    await expect(page.locator('#sq-content')).toContainText('Oops! That page can’t be found.');
+    await expect(webApp.productPage.mistakeMessageLinkPage).toContainText('Oops! That page can’t be found.');
     
   });
 
@@ -90,8 +90,9 @@ test.describe('Functional', () => {
     await webApp.mainPage.clickButtonClose();
     await webApp.mainPage.findBags();
     await webApp.findBagsPage.gotoProduct();
+    await webApp.productPage.gotoxPlatform();
 
-    
+    await expect( webApp.productPage.mistakeMessage).toBeVisible();
     
   })
```